## NEWS / ARTICLE

Work on styling and layout
on both the news.php for the previews and on the article.php for displaying the full article
change imagecopyresized so it doesnt stretch the image

## BOOKING

Work on the php handling of the booking data,
either on buchen.php or a seperate data handler file

## CSS / DESIGN

Change the look of most forms (especially the ones using login-register css classes)
Review if layout should be changed for those forms

## Database

Implement simple database setup to allow for better storage handling.

## Page Structure / Technology

Work on a module based page
Implement a on-page router. This probably needs config to be changed in xampp/apache, as we always want to route to index.php

Find a way to efficiently route pages together with footers like it is possible in react
This would allow for setting multiple routes inside of a structure that renders headers and footers aswell as outside of that
route.
This would ease work on new pages and eliminates the use of including main css styles aswell as the footer and header on
every page.

IDEA: Have the router as a recursive function, if possible in php.
(This would need a special handling of pages that are not in the main '/'route handling)
index.php would call the router on the top level '/' route (if applicable and not a case from above),
the router would then execute its handler on that specific route, and check if there is another subroute (possible thorugh splitting the uri retrieved into a array by every '/')
execute the handler / load the page of this subroute and repeat if applicable.
also use a default route, for example under '/', default would be the main page (home page), that is being loaded when no subroute is found.
This would allow for easy nesting.
This process still needs to be modelled into a efficient way. probably changing the routes.php will be required and a look into a recursive efficient router will be needed.

For setting a title and extra needed custom css etc, a extra handler would probably be the best solution. It would load the title and custom css etc. The best solution would be to make a field that hosts some html inside of the routes. This html could be loaded and echoed into the index.php. This would also remove the need for setting the title through a variable and would be the easiest and most efficient way.

IDEA: The router could both handle the custom head data and the page load.
The page filepath could be set as a variable, aswell as the head data (custom css, title, etc...)
so we would include the router on top of the page, the router will set $page and $head, or similar.
These will then be included / echoed into the index.php
